// üìå –ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤–µ—Ä–Ω–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–∏ –≤ –≤–∏–¥–µ
// –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫.
// üìå –ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø–∏—à–µ—Ç –º–∞—Å—Å–∏–≤, –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω—ã–π –ø—Ä–µ–¥—ã–¥—É—â–∏–º
// –º–µ—Ç–æ–¥–æ–º –≤ —Ñ–∞–π–ª.
// üìå –û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –æ—à–∏–±–∫–∏ —Å –ø–æ–º–æ—â—å—é try-catch –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. –í —Å–ª—É—á–∞–µ
// –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è, –æ–Ω–æ –¥–æ–ª–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –ª–æ–≥-—Ñ–∞–π–ª.

import java.io.File;
import java.io.FileWriter;
import java.util.logging.FileHandler;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;

public class Filework {
    private static Logger logger = Logger.getLogger(Filework.class.getName());

    public static void main(String[] args) {
        setLogger();
        String[] content = getContentFolder(".ds");
        writeToFile(content, "Collect.txt");
    }

    public static String[] getContentFolder(String dir) {
        File folder = new File(dir);
        return folder.list();
    }

    public static void writeToFile(String[] contents, String filename) {

        try (FileWriter fw = new FileWriter(filename)) {
            for (String string : contents) {
                fw.write(string);
                fw.write(System.lineSeparator());
            }

        } catch (Exception e) {
            // TODO: handle exception
            // System.out.println("Error write file! ");
            logger.warning("Error write file! ");
        }

    }

    public static void setLogger() {
        try {
            FileHandler fileHandler = new FileHandler("Log.txt",true);
            logger.addHandler(fileHandler);
            SimpleFormatter format = new SimpleFormatter();
            fileHandler.setFormatter(format);
        } catch (Exception e) {
            // TODO: handle exception
            e.printStackTrace();

        }
    }

}
